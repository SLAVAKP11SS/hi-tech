---
- name: Voiting app
  hosts: all
  user: root
  gather_facts: no
  tasks:

  - name: "Disable Firewalld"
    service:
      name: firewalld
      enabled: no
      state: stopped
  
  - name: "Disable SELinux"
    selinux:
      policy: targeted
      state: permissive
  
  - name: "Install GIT"
    dnf:
      name: git
      state: present
  
  - name: "Clone repo with the app"
    git:
      repo: 'https://github.com/dockersamples/example-voting-app'
      dest: '/root/example-voting-app'
  
  - name: "Change hosts"
    copy:
      src: ./hosts
      dest: /etc/hosts
  
  - name: "Install Redis"
    dnf:
      name:
        - epel-release
        - redis
      state: present
  
  - name: "Enable redis"
    service:
      name: redis
      enabled: yes
      state: started
  
  - name: "Install PostgreSQL"
    dnf:
      name:
        - postgresql
        - postgresql-server
      state: present
  
  - name: "Find out if PostgreSQL is initialized"
    ansible.builtin.stat:
      path: "/var/lib/pgsql/data/pg_hba.conf"
    register: postgres_data
  
  - name: "Init PostgreSQL"
    shell: "postgresql-setup --initdb"
    when: not postgres_data.stat.exists
  
  - name: "Enable PostgreSQL"
    service:
      name: postgresql
      enabled: yes
      state: started
  
  - name: "Update user password"
    become: yes
    become_user: postgres
    shell: psql -c "ALTER USER postgres WITH PASSWORD 'postgres';"
  
  - name: "Allow md5 connection for the db user"
    lineinfile:
      path: /var/lib/pgsql/data/pg_hba.conf
      regexp: '^host +all'
      line: 'host all all 127.0.0.1/8 md5'
    notify: restart postgres
  
  - name: "Install python things"
    dnf:
      name:
        - python3-pip
        - python3-virtualenv
      state: present
  
  - name: "Setup virtual env"
    pip:
      virtualenv: "/root/example-voting-app/vote/.venv"
      virtualenv_command: /usr/bin/python3 -m venv
      requirements: "/root/example-voting-app/vote/requirements.txt"
  
  - name: "Copy vote systemd unit"
    copy:
      src: "vote.service"
      dest: "/etc/systemd/system/vote.service"
  
  - name: "Reload daemon"
    systemd:
      daemon_reload: yes
  
  - name: "Enable vote"
    service:
      name: vote
      enabled: yes
      state: started
  
  - name: "Install dotnet"
    dnf:
      name:
        - dotnet-sdk-3.1
        - dotnet-runtime-5.0
      state: present
  
  - name: "publish"
    shell: "dotnet publish -c Release -o /root/example-voting-app/worker/out /root/example-voting-app/worker/src/Worker/Worker.csproj"
  
  handlers:
    - name: restart postgres
      service:
        name: postgresql
        state: restarted
